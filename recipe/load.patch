diff --git a/pdal/drivers.py b/pdal/drivers.py
index 54ea882..20c9beb 100644
--- a/pdal/drivers.py
+++ b/pdal/drivers.py
@@ -5,6 +5,8 @@ from typing import Callable, ClassVar, FrozenSet, Mapping, Optional, Sequence, T
 
 from .pipeline import Filter, Reader, Stage, Writer
 
+import shlex
+
 StreamableTypes: FrozenSet
 
 
@@ -59,16 +61,34 @@ class Driver:
 
 
 def inject_pdal_drivers() -> None:
-    drivers = json.loads(
-        subprocess.run(["pdal", "--drivers", "--showjson"], capture_output=True).stdout
-    )
-    options = dict(
-        json.loads(
-            subprocess.run(
+
+    command = 'pdal --drivers --showjson'
+
+    p = subprocess.run(shlex.split(command),
+                       stdout = subprocess.PIPE,
+                       stderr=subprocess.PIPE)
+    if p.stderr:
+        raise RuntimeError(f"Unable to run pdal --drivers with error '{p.stderr}'")
+
+    try:
+        drivers = json.loads(p.stdout.decode('utf-8'))
+    except json.decoder.JSONDecodeError:
+        print (type(p.stdout))
+        print (p.stdout.decode('utf-8'))
+        raise
+
+    p = subprocess.run(
                 ["pdal", "--options", "all", "--showjson"], capture_output=True
-            ).stdout
-        )
-    )
+            )
+    command = 'pdal --options all --showjson'
+
+    p = subprocess.run(shlex.split(command),
+                       stdout = subprocess.PIPE,
+                       stderr=subprocess.PIPE)
+    if p.stderr:
+        raise RuntimeError(f"Unable to run pdal --options with error '{p.stderr}'")
+
+    options = dict( json.loads( p.stdout.decode('utf-8') ))
     streamable = []
     for d in drivers:
         name = d["name"]
